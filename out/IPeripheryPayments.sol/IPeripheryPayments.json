{
  "abi": [
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "refundETH()": "12210e8a",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "unwrapWETH9(uint256,address)": "49404b7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap-core/=lib/v3-core/contracts/\",\":@uniswap-periphery/=lib/v3-periphery/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-auth/=lib/dss/lib/ds-token/lib/ds-auth/src/\",\":ds-math/=lib/dss/lib/ds-token/lib/ds-math/src/\",\":ds-note/=lib/dss/lib/ds-value/lib/ds-thing/lib/ds-note/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ds-thing/=lib/dss/lib/ds-value/lib/ds-thing/src/\",\":ds-token/=lib/dss/lib/ds-token/src/\",\":ds-value/=lib/dss/lib/ds-value/src/\",\":dss/=lib/dss/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":gho-core/=lib/gho-core/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap-core/=lib/v3-core/contracts/",
        ":@uniswap-periphery/=lib/v3-periphery/contracts/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":ds-auth/=lib/dss/lib/ds-token/lib/ds-auth/src/",
        ":ds-math/=lib/dss/lib/ds-token/lib/ds-math/src/",
        ":ds-note/=lib/dss/lib/ds-value/lib/ds-thing/lib/ds-note/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":ds-thing/=lib/dss/lib/ds-value/lib/ds-thing/src/",
        ":ds-token/=lib/dss/lib/ds-token/src/",
        ":ds-value/=lib/dss/lib/ds-value/src/",
        ":dss/=lib/dss/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":gho-core/=lib/gho-core/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": "IPeripheryPayments"
      },
      "libraries": {}
    },
    "sources": {
      "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
        "urls": [
          "bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
          "dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol",
    "id": 35537,
    "exportedSymbols": {
      "IPeripheryPayments": [
        35536
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1379:66",
    "nodes": [
      {
        "id": 35512,
        "nodeType": "PragmaDirective",
        "src": "45:24:66",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 35536,
        "nodeType": "ContractDefinition",
        "src": "163:1260:66",
        "nodes": [
          {
            "id": 35521,
            "nodeType": "FunctionDefinition",
            "src": "505:80:66",
            "nodes": [],
            "documentation": {
              "id": 35514,
              "nodeType": "StructuredDocumentation",
              "src": "198:302:66",
              "text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
            },
            "functionSelector": "49404b7c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWETH9",
            "nameLocation": "514:11:66",
            "parameters": {
              "id": 35519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35516,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "534:13:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 35521,
                  "src": "526:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35518,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "557:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 35521,
                  "src": "549:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:42:66"
            },
            "returnParameters": {
              "id": 35520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:66"
            },
            "scope": 35536,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35525,
            "nodeType": "FunctionDefinition",
            "src": "821:38:66",
            "nodes": [],
            "documentation": {
              "id": 35522,
              "nodeType": "StructuredDocumentation",
              "src": "591:225:66",
              "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "12210e8a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundETH",
            "nameLocation": "830:9:66",
            "parameters": {
              "id": 35523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:66"
            },
            "returnParameters": {
              "id": 35524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:66"
            },
            "scope": 35536,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35535,
            "nodeType": "FunctionDefinition",
            "src": "1297:124:66",
            "nodes": [],
            "documentation": {
              "id": 35526,
              "nodeType": "StructuredDocumentation",
              "src": "865:427:66",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "df2ab5bb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nameLocation": "1306:10:66",
            "parameters": {
              "id": 35533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35528,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1334:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 35535,
                  "src": "1326:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35530,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "1357:13:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 35535,
                  "src": "1349:21:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35532,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1388:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 35535,
                  "src": "1380:17:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:87:66"
            },
            "returnParameters": {
              "id": 35534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:66"
            },
            "scope": 35536,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPeripheryPayments",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 35513,
          "nodeType": "StructuredDocumentation",
          "src": "71:92:66",
          "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          35536
        ],
        "name": "IPeripheryPayments",
        "nameLocation": "173:18:66",
        "scope": 35537,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 66
}